;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 24-Nov-18 2:20:21 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2884      	GOTO       132
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00B8      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00B7      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
0x000D	0x0804      	MOVF       FSR, 0
0x000E	0x00A1      	MOVWF      33
;Slave_2_Devices.c,33 :: 		void interrupt()
;Slave_2_Devices.c,35 :: 		if(PIR1.RCIF)
0x000F	0x1E8C      	BTFSS      PIR1, 5
0x0010	0x2844      	GOTO       L_interrupt0
;Slave_2_Devices.c,37 :: 		while(uart1_data_ready()==0);                           //while NO data in receive register
L_interrupt1:
0x0011	0x2072      	CALL       _UART1_Data_Ready
0x0012	0x0870      	MOVF       R0, 0
0x0013	0x3A00      	XORLW      0
0x0014	0x1D03      	BTFSS      STATUS, 2
0x0015	0x2817      	GOTO       L_interrupt2
0x0016	0x2811      	GOTO       L_interrupt1
L_interrupt2:
;Slave_2_Devices.c,38 :: 		if(uart1_data_ready()==1)                               //if data is ready for reading
0x0017	0x2072      	CALL       _UART1_Data_Ready
0x0018	0x0870      	MOVF       R0, 0
0x0019	0x3A01      	XORLW      1
0x001A	0x1D03      	BTFSS      STATUS, 2
0x001B	0x2844      	GOTO       L_interrupt3
;Slave_2_Devices.c,40 :: 		tempReceiveData = UART1_Read();
0x001C	0x2079      	CALL       _UART1_Read
0x001D	0x0870      	MOVF       R0, 0
0x001E	0x00B2      	MOVWF      _tempReceiveData
;Slave_2_Devices.c,41 :: 		if(tempReceiveData == 'S')                           //received "S", enter transmitting mode
0x001F	0x0870      	MOVF       R0, 0
0x0020	0x3A53      	XORLW      83
0x0021	0x1D03      	BTFSS      STATUS, 2
0x0022	0x282A      	GOTO       L_interrupt4
;Slave_2_Devices.c,43 :: 		count=0;
0x0023	0x01A2      	CLRF       _count
;Slave_2_Devices.c,44 :: 		receiveData[count] = tempReceiveData;
0x0024	0x0822      	MOVF       _count, 0
0x0025	0x3E27      	ADDLW      _receiveData
0x0026	0x0084      	MOVWF      FSR
0x0027	0x0832      	MOVF       _tempReceiveData, 0
0x0028	0x0080      	MOVWF      INDF
;Slave_2_Devices.c,45 :: 		count++;
0x0029	0x0AA2      	INCF       _count, 1
;Slave_2_Devices.c,46 :: 		}
L_interrupt4:
;Slave_2_Devices.c,47 :: 		if(tempReceiveData !='S' && tempReceiveData !='E')
0x002A	0x0832      	MOVF       _tempReceiveData, 0
0x002B	0x3A53      	XORLW      83
0x002C	0x1903      	BTFSC      STATUS, 2
0x002D	0x2838      	GOTO       L_interrupt7
0x002E	0x0832      	MOVF       _tempReceiveData, 0
0x002F	0x3A45      	XORLW      69
0x0030	0x1903      	BTFSC      STATUS, 2
0x0031	0x2838      	GOTO       L_interrupt7
L__interrupt35:
;Slave_2_Devices.c,49 :: 		receiveData[count] = tempReceiveData;
0x0032	0x0822      	MOVF       _count, 0
0x0033	0x3E27      	ADDLW      _receiveData
0x0034	0x0084      	MOVWF      FSR
0x0035	0x0832      	MOVF       _tempReceiveData, 0
0x0036	0x0080      	MOVWF      INDF
;Slave_2_Devices.c,50 :: 		count++;
0x0037	0x0AA2      	INCF       _count, 1
;Slave_2_Devices.c,51 :: 		}
L_interrupt7:
;Slave_2_Devices.c,52 :: 		if(tempReceiveData == 'E')                           //Receive EVERYTHING indicate by byte E, then flagReceiveAllData turns into bit 1
0x0038	0x0832      	MOVF       _tempReceiveData, 0
0x0039	0x3A45      	XORLW      69
0x003A	0x1D03      	BTFSS      STATUS, 2
0x003B	0x2844      	GOTO       L_interrupt8
;Slave_2_Devices.c,54 :: 		receiveData[count] = tempReceiveData;
0x003C	0x0822      	MOVF       _count, 0
0x003D	0x3E27      	ADDLW      _receiveData
0x003E	0x0084      	MOVWF      FSR
0x003F	0x0832      	MOVF       _tempReceiveData, 0
0x0040	0x0080      	MOVWF      INDF
;Slave_2_Devices.c,55 :: 		count=0;
0x0041	0x01A2      	CLRF       _count
;Slave_2_Devices.c,56 :: 		flagReceivedAllData = 1;
0x0042	0x3001      	MOVLW      1
0x0043	0x00A3      	MOVWF      _flagReceivedAllData
;Slave_2_Devices.c,57 :: 		}
L_interrupt8:
;Slave_2_Devices.c,58 :: 		}
L_interrupt3:
;Slave_2_Devices.c,59 :: 		}
L_interrupt0:
;Slave_2_Devices.c,60 :: 		}
L_end_interrupt:
L__interrupt40:
0x0044	0x0820      	MOVF       32, 0
0x0045	0x00F0      	MOVWF      R0
0x0046	0x0821      	MOVF       33, 0
0x0047	0x0084      	MOVWF      FSR
0x0048	0x0837      	MOVF       ___savePCLATH, 0
0x0049	0x008A      	MOVWF      PCLATH
0x004A	0x0E38      	SWAPF      ___saveSTATUS, 0
0x004B	0x0083      	MOVWF      STATUS
0x004C	0x0EFF      	SWAPF      R15, 1
0x004D	0x0E7F      	SWAPF      R15, 0
0x004E	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x004F	0x1283      	BCF        STATUS, 5
0x0050	0x1303      	BCF        STATUS, 6
0x0051	0x0826      	MOVF       ___DoICPAddr+1, 0
0x0052	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0053	0x0825      	MOVF       ___DoICPAddr, 0
0x0054	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0055	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0056	0x204F      	CALL       _____DoICP
0x0057	0x118A      	BCF        PCLATH, 3
0x0058	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0059	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x005A	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x005B	0x0AA5      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x005C	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x005D	0x0AA6      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x005E	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x005F	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0060	0x2856      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0061	0x0008      	RETURN
; end of ___CC2DW
_UART1_Init:
;__Lib_UART_b21.c,2 :: 		
;__Lib_UART_b21.c,5 :: 		
0x0062	0x1683      	BSF        STATUS, 5
0x0063	0x1303      	BCF        STATUS, 6
0x0064	0x1698      	BSF        TXSTA, 5
;__Lib_UART_b21.c,6 :: 		
0x0065	0x3090      	MOVLW      144
0x0066	0x1283      	BCF        STATUS, 5
0x0067	0x0098      	MOVWF      RCSTA
;__Lib_UART_b21.c,7 :: 		
0x0068	0x1683      	BSF        STATUS, 5
0x0069	0x1486      	BSF        TRISB1_bit, BitPos(TRISB1_bit+0)
;__Lib_UART_b21.c,8 :: 		
0x006A	0x1106      	BCF        TRISB2_bit, BitPos(TRISB2_bit+0)
;__Lib_UART_b21.c,9 :: 		
L_UART1_Init0:
0x006B	0x1283      	BCF        STATUS, 5
0x006C	0x1E8C      	BTFSS      PIR1, 5
0x006D	0x2871      	GOTO       L_UART1_Init1
;__Lib_UART_b21.c,10 :: 		
0x006E	0x081A      	MOVF       RCREG, 0
0x006F	0x00F0      	MOVWF      R0
0x0070	0x286B      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_b21.c,11 :: 		
L_end_UART1_Init:
0x0071	0x0008      	RETURN
; end of _UART1_Init
_UART1_Data_Ready:
;__Lib_UART_b21.c,15 :: 		
;__Lib_UART_b21.c,16 :: 		
0x0072	0x3000      	MOVLW      0
0x0073	0x1283      	BCF        STATUS, 5
0x0074	0x1303      	BCF        STATUS, 6
0x0075	0x1A8C      	BTFSC      PIR1, 5
0x0076	0x3001      	MOVLW      1
0x0077	0x00F0      	MOVWF      R0
;__Lib_UART_b21.c,17 :: 		
L_end_UART1_Data_Ready:
0x0078	0x0008      	RETURN
; end of _UART1_Data_Ready
_UART1_Read:
;__Lib_UART_b21.c,20 :: 		
;__Lib_UART_b21.c,23 :: 		
0x0079	0x1283      	BCF        STATUS, 5
0x007A	0x1303      	BCF        STATUS, 6
0x007B	0x081A      	MOVF       RCREG, 0
0x007C	0x00F1      	MOVWF      R1
;__Lib_UART_b21.c,24 :: 		
0x007D	0x1C98      	BTFSS      RCSTA, 1
0x007E	0x2881      	GOTO       L_UART1_Read2
;__Lib_UART_b21.c,25 :: 		
0x007F	0x1218      	BCF        RCSTA, 4
;__Lib_UART_b21.c,26 :: 		
0x0080	0x1618      	BSF        RCSTA, 4
;__Lib_UART_b21.c,27 :: 		
L_UART1_Read2:
;__Lib_UART_b21.c,28 :: 		
0x0081	0x0871      	MOVF       R1, 0
0x0082	0x00F0      	MOVWF      R0
;__Lib_UART_b21.c,29 :: 		
L_end_UART1_Read:
0x0083	0x0008      	RETURN
; end of _UART1_Read
_main:
0x0084	0x1283      	BCF        STATUS, 5
0x0085	0x1303      	BCF        STATUS, 6
0x0086	0x01A2      	CLRF       _count
0x0087	0x01A3      	CLRF       _flagReceivedAllData
;Slave_2_Devices.c,61 :: 		void main() {
;Slave_2_Devices.c,62 :: 		TRISB.B0 =0;                         //RB0 is output, shall become input if TRISB.B0=1
0x0088	0x1683      	BSF        STATUS, 5
0x0089	0x1006      	BCF        TRISB, 0
;Slave_2_Devices.c,63 :: 		TRISB.B4 =0;
0x008A	0x1206      	BCF        TRISB, 4
;Slave_2_Devices.c,66 :: 		TRISB.B3 =0;                         //Bit RS485, output
0x008B	0x1186      	BCF        TRISB, 3
;Slave_2_Devices.c,68 :: 		oldstate = 0;
0x008C	0x1283      	BCF        STATUS, 5
0x008D	0x1024      	BCF        _oldstate, BitPos(_oldstate+0)
;Slave_2_Devices.c,69 :: 		UART1_Init(9600);                    //init UART1 with baudrate 9600 (capable of transferring a maximum of 9600 bits per second)
0x008E	0x3081      	MOVLW      129
0x008F	0x1683      	BSF        STATUS, 5
0x0090	0x0099      	MOVWF      SPBRG
0x0091	0x1518      	BSF        TXSTA, 2
0x0092	0x2062      	CALL       _UART1_Init
;Slave_2_Devices.c,70 :: 		Delay_ms(100);
0x0093	0x3003      	MOVLW      3
0x0094	0x00FB      	MOVWF      R11
0x0095	0x308A      	MOVLW      138
0x0096	0x00FC      	MOVWF      R12
0x0097	0x3055      	MOVLW      85
0x0098	0x00FD      	MOVWF      R13
L_main9:
0x0099	0x0BFD      	DECFSZ     R13, 1
0x009A	0x2899      	GOTO       L_main9
0x009B	0x0BFC      	DECFSZ     R12, 1
0x009C	0x2899      	GOTO       L_main9
0x009D	0x0BFB      	DECFSZ     R11, 1
0x009E	0x2899      	GOTO       L_main9
0x009F	0x0000      	NOP
0x00A0	0x0000      	NOP
;Slave_2_Devices.c,72 :: 		RCIE_bit = 1;                        // enable interrupt on UART1 receive
0x00A1	0x1683      	BSF        STATUS, 5
0x00A2	0x168C      	BSF        RCIE_bit, BitPos(RCIE_bit+0)
;Slave_2_Devices.c,73 :: 		TXIE_bit = 0;                        // disable interrupt on UART1 transmit
0x00A3	0x120C      	BCF        TXIE_bit, BitPos(TXIE_bit+0)
;Slave_2_Devices.c,74 :: 		PEIE_bit = 1;                        // enable peripheral interrupts
0x00A4	0x170B      	BSF        PEIE_bit, BitPos(PEIE_bit+0)
;Slave_2_Devices.c,75 :: 		GIE_bit = 1;                         // enable all interrupts
0x00A5	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;Slave_2_Devices.c,78 :: 		addressDevice1[0] = '0';             //device ID 1: 0
0x00A6	0x3030      	MOVLW      48
0x00A7	0x1283      	BCF        STATUS, 5
0x00A8	0x00B3      	MOVWF      _addressDevice1
;Slave_2_Devices.c,79 :: 		addressDevice1[1] = '4';             //device ID 1: 1
0x00A9	0x3034      	MOVLW      52
0x00AA	0x00B4      	MOVWF      _addressDevice1+1
;Slave_2_Devices.c,80 :: 		addressDevice2[0] = '0';
0x00AB	0x3030      	MOVLW      48
0x00AC	0x00B5      	MOVWF      _addressDevice2
;Slave_2_Devices.c,81 :: 		addressDevice2[1] = '5';
0x00AD	0x3035      	MOVLW      53
0x00AE	0x00B6      	MOVWF      _addressDevice2+1
;Slave_2_Devices.c,94 :: 		Delay_ms(100);
0x00AF	0x3003      	MOVLW      3
0x00B0	0x00FB      	MOVWF      R11
0x00B1	0x308A      	MOVLW      138
0x00B2	0x00FC      	MOVWF      R12
0x00B3	0x3055      	MOVLW      85
0x00B4	0x00FD      	MOVWF      R13
L_main10:
0x00B5	0x0BFD      	DECFSZ     R13, 1
0x00B6	0x28B5      	GOTO       L_main10
0x00B7	0x0BFC      	DECFSZ     R12, 1
0x00B8	0x28B5      	GOTO       L_main10
0x00B9	0x0BFB      	DECFSZ     R11, 1
0x00BA	0x28B5      	GOTO       L_main10
0x00BB	0x0000      	NOP
0x00BC	0x0000      	NOP
;Slave_2_Devices.c,112 :: 		Delay_ms(1000);
0x00BD	0x301A      	MOVLW      26
0x00BE	0x00FB      	MOVWF      R11
0x00BF	0x305E      	MOVLW      94
0x00C0	0x00FC      	MOVWF      R12
0x00C1	0x306E      	MOVLW      110
0x00C2	0x00FD      	MOVWF      R13
L_main11:
0x00C3	0x0BFD      	DECFSZ     R13, 1
0x00C4	0x28C3      	GOTO       L_main11
0x00C5	0x0BFC      	DECFSZ     R12, 1
0x00C6	0x28C3      	GOTO       L_main11
0x00C7	0x0BFB      	DECFSZ     R11, 1
0x00C8	0x28C3      	GOTO       L_main11
0x00C9	0x0000      	NOP
;Slave_2_Devices.c,113 :: 		PORTB.RB0 =1;                       //trigger Relay1 on, LED on
0x00CA	0x1406      	BSF        PORTB, 0
;Slave_2_Devices.c,114 :: 		PORTB.RB4 =1;
0x00CB	0x1606      	BSF        PORTB, 4
;Slave_2_Devices.c,116 :: 		Delay_ms(500);
0x00CC	0x300D      	MOVLW      13
0x00CD	0x00FB      	MOVWF      R11
0x00CE	0x30AF      	MOVLW      175
0x00CF	0x00FC      	MOVWF      R12
0x00D0	0x30B6      	MOVLW      182
0x00D1	0x00FD      	MOVWF      R13
L_main12:
0x00D2	0x0BFD      	DECFSZ     R13, 1
0x00D3	0x28D2      	GOTO       L_main12
0x00D4	0x0BFC      	DECFSZ     R12, 1
0x00D5	0x28D2      	GOTO       L_main12
0x00D6	0x0BFB      	DECFSZ     R11, 1
0x00D7	0x28D2      	GOTO       L_main12
0x00D8	0x0000      	NOP
;Slave_2_Devices.c,117 :: 		PORTB.RB0 =0;                       //trigger Relay1 off, LED off
0x00D9	0x1006      	BCF        PORTB, 0
;Slave_2_Devices.c,118 :: 		PORTB.RB4 =0;
0x00DA	0x1206      	BCF        PORTB, 4
;Slave_2_Devices.c,120 :: 		while(1)
L_main13:
;Slave_2_Devices.c,123 :: 		if(flagReceivedAllData==1){
0x00DB	0x0823      	MOVF       _flagReceivedAllData, 0
0x00DC	0x3A01      	XORLW      1
0x00DD	0x1D03      	BTFSS      STATUS, 2
0x00DE	0x2910      	GOTO       L_main15
;Slave_2_Devices.c,124 :: 		flagReceivedAllData = 0;                                   //after begin function, set flag back to 0 to continue receiving data
0x00DF	0x01A3      	CLRF       _flagReceivedAllData
;Slave_2_Devices.c,151 :: 		if(receiveData[1] == '1' && receiveData[2] == '0' && receiveData[3] == 'D'){
0x00E0	0x0828      	MOVF       _receiveData+1, 0
0x00E1	0x3A31      	XORLW      49
0x00E2	0x1D03      	BTFSS      STATUS, 2
0x00E3	0x2910      	GOTO       L_main18
0x00E4	0x0829      	MOVF       _receiveData+2, 0
0x00E5	0x3A30      	XORLW      48
0x00E6	0x1D03      	BTFSS      STATUS, 2
0x00E7	0x2910      	GOTO       L_main18
0x00E8	0x082A      	MOVF       _receiveData+3, 0
0x00E9	0x3A44      	XORLW      68
0x00EA	0x1D03      	BTFSS      STATUS, 2
0x00EB	0x2910      	GOTO       L_main18
L__main38:
;Slave_2_Devices.c,152 :: 		if(receiveData[4] == addressDevice1[0] && receiveData[5] == addressDevice1[1]){  //receiveData[4]=0 && receiveData[5]=1 => device 01
0x00EC	0x082B      	MOVF       _receiveData+4, 0
0x00ED	0x0633      	XORWF      _addressDevice1, 0
0x00EE	0x1D03      	BTFSS      STATUS, 2
0x00EF	0x28FE      	GOTO       L_main21
0x00F0	0x082C      	MOVF       _receiveData+5, 0
0x00F1	0x0634      	XORWF      _addressDevice1+1, 0
0x00F2	0x1D03      	BTFSS      STATUS, 2
0x00F3	0x28FE      	GOTO       L_main21
L__main37:
;Slave_2_Devices.c,153 :: 		if(receiveData[9] == '1'){                                                   //receiveData[9]=1 => ON command
0x00F4	0x0830      	MOVF       _receiveData+9, 0
0x00F5	0x3A31      	XORLW      49
0x00F6	0x1D03      	BTFSS      STATUS, 2
0x00F7	0x28F9      	GOTO       L_main22
;Slave_2_Devices.c,154 :: 		PORTB.RB0 =1;                                                            //trigger On pin RB0=> Relay1
0x00F8	0x1406      	BSF        PORTB, 0
;Slave_2_Devices.c,155 :: 		}
L_main22:
;Slave_2_Devices.c,156 :: 		if(receiveData[9] == '0'){
0x00F9	0x0830      	MOVF       _receiveData+9, 0
0x00FA	0x3A30      	XORLW      48
0x00FB	0x1D03      	BTFSS      STATUS, 2
0x00FC	0x28FE      	GOTO       L_main23
;Slave_2_Devices.c,157 :: 		PORTB.RB0 =0;
0x00FD	0x1006      	BCF        PORTB, 0
;Slave_2_Devices.c,158 :: 		}
L_main23:
;Slave_2_Devices.c,159 :: 		}
L_main21:
;Slave_2_Devices.c,160 :: 		if(receiveData[4] == addressDevice2[0] && receiveData[5] == addressDevice2[1]){   //receiveData[4]=0 && receiveData[5]=2
0x00FE	0x082B      	MOVF       _receiveData+4, 0
0x00FF	0x0635      	XORWF      _addressDevice2, 0
0x0100	0x1D03      	BTFSS      STATUS, 2
0x0101	0x2910      	GOTO       L_main26
0x0102	0x082C      	MOVF       _receiveData+5, 0
0x0103	0x0636      	XORWF      _addressDevice2+1, 0
0x0104	0x1D03      	BTFSS      STATUS, 2
0x0105	0x2910      	GOTO       L_main26
L__main36:
;Slave_2_Devices.c,161 :: 		if(receiveData[9] == '1'){                                                    //device 02
0x0106	0x0830      	MOVF       _receiveData+9, 0
0x0107	0x3A31      	XORLW      49
0x0108	0x1D03      	BTFSS      STATUS, 2
0x0109	0x290B      	GOTO       L_main27
;Slave_2_Devices.c,162 :: 		PORTB.RB4 =1;                                                             //turn On Relay2
0x010A	0x1606      	BSF        PORTB, 4
;Slave_2_Devices.c,163 :: 		}
L_main27:
;Slave_2_Devices.c,164 :: 		if(receiveData[9] == '0'){
0x010B	0x0830      	MOVF       _receiveData+9, 0
0x010C	0x3A30      	XORLW      48
0x010D	0x1D03      	BTFSS      STATUS, 2
0x010E	0x2910      	GOTO       L_main28
;Slave_2_Devices.c,165 :: 		PORTB.RB4 =0;
0x010F	0x1206      	BCF        PORTB, 4
;Slave_2_Devices.c,166 :: 		}
L_main28:
;Slave_2_Devices.c,167 :: 		}
L_main26:
;Slave_2_Devices.c,178 :: 		}
L_main18:
;Slave_2_Devices.c,179 :: 		}
L_main15:
;Slave_2_Devices.c,181 :: 		}
0x0110	0x28DB      	GOTO       L_main13
;Slave_2_Devices.c,182 :: 		}
L_end_main:
0x0111	0x2911      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [75]    _interrupt
0x004F       [7]    _____DoICP
0x0056      [12]    ___CC2DW
0x0062      [16]    _UART1_Init
0x0072       [7]    _UART1_Data_Ready
0x0079      [11]    _UART1_Read
0x0084     [142]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000B       [0]    PEIE_bit
0x000B       [0]    GIE_bit
0x000C       [1]    PIR1
0x0018       [1]    RCSTA
0x001A       [1]    RCREG
0x0022       [1]    _count
0x0023       [1]    _flagReceivedAllData
0x0024       [0]    _oldstate
0x0025       [2]    ___DoICPAddr
0x0027      [11]    _receiveData
0x0032       [1]    _tempReceiveData
0x0033       [2]    _addressDevice1
0x0035       [2]    _addressDevice2
0x0037       [1]    ___savePCLATH
0x0038       [1]    ___saveSTATUS
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB1_bit
0x0086       [1]    TRISB
0x008C       [0]    RCIE_bit
0x008C       [0]    TXIE_bit
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_RS485_send29
  L_RS485_send30
  L_RS485_send31
  L_RS485_send32
  L_RS485_send33
  L_RS485_send34
  L__interrupt35
  L__main36
  L__main37
  L__main38
  L_end_interrupt
  _interrupt
  L__interrupt40
  L_end_main
  _main
  L_end_RS485_send
  _RS485_send
  L__RS485_send43
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_RS485_send29
  L_RS485_send30
  L_RS485_send31
  L_RS485_send32
  L_RS485_send33
  L_RS485_send34
  L__interrupt35
  L__main36
  L__main37
  L__main38
  L_end_interrupt
  _interrupt
  L__interrupt40
  L_end_main
  _main
  L_end_RS485_send
  _RS485_send
  L__RS485_send43
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
